<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABIAAAAKICAIAAACHSRZaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAD4BJREFUeF7t17EN5UYQBUFlIeNw+YcpOWONSfI3uUA9VAyz2//8++cvAAAAAQEG
        AAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFg
        AAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEB
        BgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABAR
        YAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAAR
        AQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQ
        EWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAA
        EQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAA
        EBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAA
        ABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYA
        ABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAA
        AAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEG
        AAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFg
        AAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEB
        BgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABAR
        YAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAAR
        AQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQ
        EWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAA
        EQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAA
        EBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAA
        ABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYA
        ABARYAAAABEBBgAAEBFgAAAAEQEGAAAQEWAAAAARAQYAABARYMDX/WdmZk9sXVfgFQIM+Jb5JpiZWbJ1
        hIFfE2DAV8xfwMzM8q2DDPyOAAPeN++/mZm9unWcgV8QYMCb5s03M7PPbB1q4FkCDHjNPPVmZvaxrXMN
        PEiAAe+YR97MzD65dbSBpwgw4AXzvJuZ2Ye3TjfwCAEG1OZhNzOzz28dcOA+AQak5kk3M7NDts44cJMA
        A1LznpuZ2SFbZxy4SYABnXnMzczsqK1jDtwhwIDOvORmZnbU1jEH7hBgQGSecTMzO3DrpAOXCTAgMm+4
        mZkduHXSgcsEGFCYB9zMzI7dOuzANQIMKMzrbWZmx24dduAaAQYU5vU2M7Njtw47cI0AAwrzepuZ2bFb
        hx24RoABhXm9zczs2K3DDlwjwIDCvN5mZnbs1mEHrhFgwM/N021mZidv3XbgGgEGFOb1NjOzY7cOO3CN
        AAMK83qbmdmxW4cduEaAAYV5vc3M7Nitww5cI8CAwrzeZmZ27NZhB64RYEBhXm8zMzt267AD1wgwoDCv
        t5mZHbt12IFrBBgQmQfczMwO3DrpwGUCDIjMG25mZgdunXTgMgEGdOYZNzOzo7aOOXCHAAM685KbmdlR
        W8ccuEOAAal5zM3M7JCtMw7cJMCA1LznZmZ2yNYZB24SYEBtnnQzM/v81gEH7hNgwAvmYTczsw9vnW7g
        EQIMeMc872Zm9smtow08RYABr5lH3szMPrZ1roEHCTDgTfPUm5nZZ7YONfAsAQa8b958MzN7des4A78g
        wICvmPffzMzyrYMM/I4AA75l/gJmZpZsHWHg1wQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAA
        RAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAA
        QESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEA
        AEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgA
        AEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIAB
        AABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQY
        AABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESA
        AQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQE
        GAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBE
        gAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABE
        BBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABA
        RIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAA
        RAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAA
        QESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEA
        AEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgA
        AEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIAB
        AABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQY
        AABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESA
        AQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQE
        GAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBE
        gAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABE
        BBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABA
        RIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAA
        RAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAA
        QESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEA
        AEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgA
        AEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIAB
        AABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQY
        AABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESA
        AQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQE
        GAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBE
        gAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABE
        BBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABA
        RIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAA
        RAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAAQESAAQAARAQYAABARIABAABEBBgAAEBEgAEAAEQEGAAA
        QESAAQAARAQYAABARIABAAAk/vz9HyQHnCBM+8u6AAAAAElFTkSuQmCC
</value>
  </data>
</root>